<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE xml>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
		xmlns="http://www.riccardopersiani.com/Schema"
		xmlns:nffg="http://www.riccardopersiani.com/Schema"
        targetNamespace="http://www.riccardopersiani.com/Schema"
        elementFormDefault="qualified">

<!-- Source diverso da destination in link? -->
<!-- oneServiceforEachServiceID Optional because of the keyref? -->


	<xsd:element name="RootNetwork" type="nffg:RootNetworkType">
		
		<!-- ***** Keys Definition ***** -->
		<!-- The *KEY* is the attribute (name) in [SingleService], which is in {Catalog} -->
		<xsd:key name="FunctionKey"> 
			<xsd:selector xpath="nffg:Catalog/nffg:SingleService"/>
			<xsd:field xpath="@name"/>
		</xsd:key>
		<!-- The KEYREF is the element [Service] present {Node} ->(name)[SingleService] which is in {Catalog} -->
		<xsd:keyref name="FunctionKeyRef" refer="nffg:FunctionKey"> 
			<xsd:selector xpath="nffg:NFFG/nffg:Nodes/nffg:Node"/>
			<xsd:field xpath="nffg:Service"/>
		</xsd:keyref>	 
	
		<!-- ***** Uniques Definition ***** -->	
		<!-- (id) in [NFFG] must be unique -->
		<xsd:unique name="oneNFFGforEachNFFGID"> 
			<xsd:selector xpath="nffg:NFFG"/>
			<xsd:field xpath="@name"/>
		</xsd:unique>
		
		 <!-- UNIQUE SERVICE ID OPTIONAL because of keyref??? -->
		<xsd:unique name="oneServiceforEachServiceID">
			<xsd:selector xpath="nffg:Catalog/nffg:SignleService"/>
			<xsd:field xpath="@name"/>
		</xsd:unique>		
	</xsd:element> <!-- *** END of RootNetwork element *** -->
	
	<!-- ***** Types Definition ***** -->
	
	<xsd:complexType name="RootNetworkType"> <!-- RootNetwork uses this type -->
		<xsd:sequence>
			<xsd:element name="NFFG" type="nffg:NFFGType" maxOccurs="unbounded">
				<!-- The *KEY* is the attribute (id) in [Node], which is in {NFFG} -->  
				<xsd:key name="NodeKey">
					<xsd:selector xpath="nffg:Nodes/nffg:Node"/>
					<xsd:field xpath="@id"/>
				</xsd:key>
				<!-- The KEYREF is the element (SourceNode) present [Link] ->(id)[Node] which is in {NFFG} -->
				<xsd:keyref name="SourceLinkKeyRef" refer="nffg:NodeKey">
					<xsd:selector xpath="nffg:Links/nffg:Link"/>
					<xsd:field xpath="nffg:Source"/>
				</xsd:keyref>
				<!-- The KEYREF is the element (DestinationNode) present [Link] ->(id)[Node] which is in {NFFG} -->		
				<xsd:keyref name="DestinationLinkKeyRef" refer="nffg:NodeKey">
					<xsd:selector xpath="nffg:Link/nffg:Links"/>
					<xsd:field xpath="nffg:Destination"/>
				</xsd:keyref>
				<!-- The KEYREF is the element (SourceNode) present [Policy] ->(id)[Node] which is in {NFFG} -->
				<xsd:keyref name="SourceReachabilityPolicyKeyRef" refer="nffg:NodeKey">
					<xsd:selector xpath="nffg:Policies/nffg:ReachabilityPolicy"/>
					<xsd:field xpath="nffg:Source"/>
				</xsd:keyref>
				<!-- The KEYREF is the element (DestinationNode) present [Policy] ->(id)[Node] which is in {NFFG} -->
				<xsd:keyref name="DestinationReachabilityPolicyKeyRef" refer="nffg:NodeKey">
					<xsd:selector xpath="nffg:Policies/nffg:ReachabilityPolicy"/>
					<xsd:field xpath="nffg:Destination"/>
				</xsd:keyref>	
				<!-- The KEYREF is the element (SourceNode) present [Policy] ->(id)[Node] which is in {NFFG} -->
				<xsd:keyref name="SourceTraversalPolicyKeyRef" refer="nffg:NodeKey">
					<xsd:selector xpath="nffg:Policies/nffg:TraversalPolicy"/>
					<xsd:field xpath="nffg:Source"/>
				</xsd:keyref>
				<!-- The KEYREF is the element (DestinationNode) present [Policy] ->(id)[Node] which is in {NFFG} -->
				<xsd:keyref name="DestinationTraversalPolicyKeyRef" refer="nffg:NodeKey">
					<xsd:selector xpath="nffg:Policies/nffg:TraversalPolicy"/>
					<xsd:field xpath="nffg:Destination"/>
				</xsd:keyref>		
				<!-- UNIQUE NODE ID OPTIONAL because of keyref??? -->
				<xsd:unique name="oneNodeforEachNodeID">
					<xsd:selector xpath="nffg:NFFG/nffg:Nodes/nffg:Node"/>
					<xsd:field xpath="@id"/>
				</xsd:unique>
				<!-- (id) in [Link] must be unique -->
				<xsd:unique name="oneLinkforEachLinkID"> 
					<xsd:selector xpath="nffg:NFFG/nffg:Links/nffg:Link"/>
					<xsd:field xpath="@id"/>
				</xsd:unique>
			</xsd:element>
			<xsd:element name="Catalog" type="nffg:CatalogType" maxOccurs="unbounded">
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	
	<xsd:complexType name="NFFGType"> <!-- NFFG uses this type -->
		<xsd:sequence>
			<xsd:element name="Nodes" type="nffg:NodesType" maxOccurs="1"/>
			<xsd:element name="Links" type="nffg:LinksType" maxOccurs="1"/> 
			<xsd:element name="Policies" type="nffg:PoliciesType" minOccurs="0" maxOccurs="1"/>
		</xsd:sequence>
		<xsd:attribute name="name" type="xsd:string" use="required"/>
		<xsd:attribute name="last_update_time" type="xsd:time"/>
	</xsd:complexType>
	
	<xsd:complexType name="NodesType">
		<xsd:sequence>
			<xsd:element name="Node" type="nffg:NodeType" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	
	<xsd:complexType name="LinksType">
		<xsd:sequence>
				<xsd:element name="Link" type="nffg:LinkType" maxOccurs="unbounded">
					<!-- UNIQUE NODE ID OPTIONAL because of keyref??? -->
					<xsd:unique name="LINK">
						<xsd:selector xpath="nffg:Link"/>
						<xsd:field xpath="Source | Destination"/>
					</xsd:unique>
				</xsd:element> 
		</xsd:sequence>
	</xsd:complexType>
	
	<xsd:complexType name="PoliciesType">
		<xsd:sequence>
			<xsd:element name="ReachabilityPolicy" type="nffg:ReachabilityPolicyType" minOccurs="0" maxOccurs="unbounded" />
			<xsd:element name="TraversalPolicy" type="nffg:TraversalPolicyType" minOccurs="0" maxOccurs="unbounded" />
		</xsd:sequence>
	</xsd:complexType>
	
	
	<xsd:complexType name="CatalogType"> <!-- Catalog uses this type -->
		<xsd:sequence>
			<xsd:element name="SingleService" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:attribute name="name" use="required" type="nffg:ServiceType"/>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	
	<xsd:complexType name="NodeType"> <!-- Node uses this type -->
		<xsd:sequence>
			<xsd:element name="Service" type="nffg:ServiceType"/>
		</xsd:sequence>
		<xsd:attribute name="id" type="xsd:string" use="required"/>
	</xsd:complexType>
	
	<xsd:simpleType name="ServiceType"><!-- SingleService in Catalog uses this type -->
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="Firewall"/>
			<xsd:enumeration value="DPI"/>
			<xsd:enumeration value="NAT"/>
			<xsd:enumeration value="Anti-spam"/>
			<xsd:enumeration value="Web-cache"/>
			<xsd:enumeration value="VPN gateway"/>
			<xsd:enumeration value="Web server"/>
			<xsd:enumeration value="Web client"/>
			<xsd:enumeration value="Mail server"/>
			<xsd:enumeration value="Mail client"/>
		</xsd:restriction>
	</xsd:simpleType>
	
	<xsd:complexType name="LinkType"> <!-- Link uses this type -->
		<xsd:sequence>
			<xsd:element name="Source" type="xsd:string" /> 
			<xsd:element name="Destination" type="xsd:string"/> 
		</xsd:sequence>
		<xsd:attribute name="id" type="xsd:string" use="required"/>
	</xsd:complexType>
	
	<xsd:complexType name="ReachabilityPolicyType"> <!-- Policy uses this type -->
		<xsd:sequence>
			<xsd:element name="Source" type="xsd:string" /> 
			<xsd:element name="Destination" type="xsd:string"/>
			<xsd:element name="isPositive" type="xsd:boolean"/>
			<xsd:element name="Verification" type="nffg:VerificationType" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="id" type="xsd:string" use="required"/>
	</xsd:complexType>
	
	<xsd:complexType name="TraversalPolicyType">
		<xsd:complexContent>
			<xsd:extension base="nffg:ReachabilityPolicyType">
				<xsd:sequence>
					<xsd:element name="Devices" type="nffg:DevicesListType"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
		
	<xsd:complexType name="VerificationType"> <!-- Verification uses this type -->
		<xsd:sequence>
			<xsd:element name="Time" type="xsd:dateTime" minOccurs="0"/>
			<xsd:element name="Message" type="xsd:string" minOccurs="0"/>
			<xsd:element name="Result" type="xsd:boolean" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>	
	
	<xsd:complexType name="DevicesListType">
		<xsd:sequence>
			<xsd:element name="Device" type="nffg:ServiceType" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	
</xsd:schema>